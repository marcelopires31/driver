//**************************************************************************
//		 Copyright (c) , Inc . All rights reserved.
//		 STB/SA, all right reserved.
//
//	Product	: STB Firmware
//
//	Date		: 
//	Author		: 
//	Purpose	: Provide GPIO Control 
//	Sources	: 
//***************************************************************************
//
// Modification use :
//**************************************************************************
//	Update
//
//	Date  	: 
//	Name	: 
//	Description	: 
//
//	Item							  Source
//   ----------------------------------------		-------------------

#ifndef __DRV_GPIO_H__
#define __DRV_GPIO_H__

#include "os.h"
#include "def_type.h"
#include "def_err.h"
#include "drv_config.h"
#include "sen5_sw_config.h"

/***************************************************************************
 * Definition
 * ************************************************************************/
#define GPIO_POLLING
/***************************************************************************
 * Enumeration
 * ************************************************************************/
/*!
 * \brief
 * enumurate to indicate the operation's error
 */
enum 
{																											   
	EN_DRV_GPIO_ERR_DEVICE = ERROR_BASE_DRV_GPIO,			/*!< This Device has not initialled			*/
	EN_DRV_GPIO_ERR_COLLISION,								/*!< The GPIO pin has registered				*/
	EN_DRV_GPIO_ERR_FULL_INTR,								/*!< The GPIO Interrupt callback is more then 4	*/
	EN_DRV_GPIO_ERR_PORT,									/*!< The GPIO invalid port						*/
	EN_DRV_GPIO_ERR_BIT,									/*!< The GPIO invalid bit						*/
	EN_DRV_GPIO_ERR_UNKNOW_DEVICE,
	EN_DRV_GPIO_ERR_NUM
};

/*!
 * \brief
 *  GPIO event type.
 */
typedef enum
{
	EN_DRV_GPIO_EVT_INT_TRIGGERED,							/*!< CI0_INSERTED */
	EN_DRV_GPIO_EVT_NUM
}EN_DRV_GPOP_EVENT_TYPE;
 
/*!
 * \brief
 * Which GPIO Port
 * CT310 port info
 * Port A : 											
 * Port B : 
 * Port C : 			
 * Port D : 														
 * Port E : 														
 * Port F : 											
 * Port G : 															
 */
typedef enum
{
	EN_DRV_GPIO_PORT_A =0,					/*!< GPIO port A 			*/
	EN_DRV_GPIO_PORT_B,						/*!< GPIO port B 			*/
	EN_DRV_GPIO_PORT_C,						/*!< GPIO port C 			*/
	EN_DRV_GPIO_PORT_D,						/*!< GPIO port D 			*/
	EN_DRV_GPIO_PORT_E,						/*!< GPIO port E 			*/
	EN_DRV_GPIO_PORT_F,						/*!< GPIO port F 			*/
	EN_DRV_GPIO_PORT_G,						/*!< GPIO port G 			*/
	EN_DRV_GPIO_PORT_H,						/*!< GPIO port H 			*/
	EN_DRV_GPIO_PORT_I,						/*!< GPIO port I 			*/
	EN_DRV_GPIO_PORT_J,						/*!< GPIO port J 			*/
	EN_DRV_GPIO_PORT_K,						/*!< GPIO port K 			*/
	EN_DRV_GPIO_PORT_L,						/*!< GPIO port K 			*/
	EN_DRV_GPIO_PORT_ALL,					/*!< GPIO port All 			*/
	EN_DRV_GPIO_PORT_NON =  0xFFFFFFFF,	/*!< GPIO port Non 			*/
} EN_DRV_GPIO_PORT;

/*!
 * \brief
 * Which GPIO Bit at a GPIO port
 * CT310 port bit info
 * Port A : Bit15 ~ Bit 0
 * Port B : Bit15 ~ Bit 0
 * Port C : Bit15 ~ Bit 0
 * Port D : Bit15 ~ Bit 0
 * Port E : Bit31 ~ Bit 0
 * Port F : Bit31 ~ Bit 0
 * Port G : Bit26 ~ Bit 0
 */
typedef enum
{
	EN_DRV_GPIO_BIT_0 = 0,					/*!< Bit  0  of GPIO port */ 
	EN_DRV_GPIO_BIT_1,						/*!< Bit  1  of GPIO port */
	EN_DRV_GPIO_BIT_2,						/*!< Bit  2  of GPIO port */
	EN_DRV_GPIO_BIT_3,						/*!< Bit  3  of GPIO port */
	EN_DRV_GPIO_BIT_4,						/*!< Bit  4  of GPIO port */
	EN_DRV_GPIO_BIT_5,						/*!< Bit  5  of GPIO port */
	EN_DRV_GPIO_BIT_6,						/*!< Bit  6  of GPIO port */
	EN_DRV_GPIO_BIT_7,						/*!< Bit  7  of GPIO port */
	EN_DRV_GPIO_BIT_8,						/*!< Bit  8  of GPIO port */
	EN_DRV_GPIO_BIT_9,						/*!< Bit  9  of GPIO port */
	EN_DRV_GPIO_BIT_10,						/*!< Bit 10  of GPIO port */
	EN_DRV_GPIO_BIT_11,						/*!< Bit 11  of GPIO port */
	EN_DRV_GPIO_BIT_12,						/*!< Bit 12  of GPIO port */
	EN_DRV_GPIO_BIT_13,						/*!< Bit 13  of GPIO port */
	EN_DRV_GPIO_BIT_14,						/*!< Bit 14  of GPIO port */
	EN_DRV_GPIO_BIT_15,						/*!< Bit 15  of GPIO port */
	EN_DRV_GPIO_BIT_16,						/*!< Bit 16  of GPIO port */
	EN_DRV_GPIO_BIT_17,						/*!< Bit 17  of GPIO port */
	EN_DRV_GPIO_BIT_18,						/*!< Bit 18  of GPIO port */
	EN_DRV_GPIO_BIT_19,						/*!< Bit 19  of GPIO port */
	EN_DRV_GPIO_BIT_20,						/*!< Bit 20  of GPIO port */
	EN_DRV_GPIO_BIT_21,						/*!< Bit 21  of GPIO port */
	EN_DRV_GPIO_BIT_22,						/*!< Bit 22  of GPIO port */
	EN_DRV_GPIO_BIT_23,						/*!< Bit 23  of GPIO port */
	EN_DRV_GPIO_BIT_24,						/*!< Bit 24  of GPIO port */
	EN_DRV_GPIO_BIT_25,						/*!< Bit 25  of GPIO port */
	EN_DRV_GPIO_BIT_26,						/*!< Bit 26  of GPIO port */
	EN_DRV_GPIO_BIT_27,						/*!< Bit 27  of GPIO port */
	EN_DRV_GPIO_BIT_28,						/*!< Bit 28  of GPIO port */
	EN_DRV_GPIO_BIT_29,						/*!< Bit 29  of GPIO port */
	EN_DRV_GPIO_BIT_30,						/*!< Bit 30  of GPIO port */
	EN_DRV_GPIO_BIT_31,						/*!< Bit 31  of GPIO port */
	EN_DRV_GPIO_BIT_ALL,					/*!< All Bit of GPIO port */
	EN_DRV_GPIO_BIT_NON =  0xFFFFFFFF,		/*!< Non Bit of GPIO port */
} EN_DRV_GPIO_BIT;

/*!
 * \brief
 * enumurate to indicate the GPIO direction
 */
typedef enum
{
	EN_DRV_GPIO_INPUT,					/*!< GPIO's direction is Input	*/
	EN_DRV_GPIO_OUTPUT,					/*!< GPIO's direction is Output	*/
	EN_DRV_GPIO_DIR_NUM
}EN_DRV_GPIO_DIR;

/*!
 * \brief
 * enumurate to indicate the GPIO pin high/low
 */
typedef enum
{
	EN_DRV_GPIO_LOW,					/*!< GPIO's status is low	*/
	EN_DRV_GPIO_HIGH,					/*!< GPIO's status is high	*/
	EN_DRV_GPIO_HIGH_Z,					/*!< GPIO's status is high Z mode (input mode)	*/
	EN_DRV_GPIO_STATUS_NUM
}EN_DRV_GPIO_STATUS;

/*!
 * \brief
 *  GPIO interrupt Number
 */
typedef enum
{
	EN_DRV_GPIO_INT0,
	EN_DRV_GPIO_INT1,
	EN_DRV_GPIO_INT2,
	EN_DRV_GPIO_INT3,
	EN_DRV_GPIO_INT_NUM
}EN_DRV_GPIO_INTERRUPT_NUM;

/*!
 * \brief
 *  GPIO interrupt Trigger condition
 */
typedef enum
{
	EN_DRV_GPIO_TRIGGER_NEGATIVE_EDGE,
	EN_DRV_GPIO_TRIGGER_POSITIVE_EDGE,
	EN_DRV_GPIO_TRIGGER_BOTH_EDGE,   //320 not support
	EN_DRV_GPIO_TRIGGER_LOW_LEVEL,
	EN_DRV_GPIO_TRIGGER_HIGH_LEVEL,
	EN_DRV_GPIO_TRIGGER_NO_OPERATION,
	EN_DRV_GPIO_TRIGGER_CONITION_NUM
}EN_DRV_GPIO_INTR_TRIGGER_CONDITION;

/*!
 * \brief
 *  GPIO PULL status
 */
typedef enum
{	
	EN_DRV_GPIO_PULL_STATUS_NORMAL,
	EN_DRV_GPIO_PULL_STATUS_UP,
	EN_DRV_GPIO_PULL_STATUS_DOWN,
	EN_DRV_GPIO_PULL_STATUS_NUM
}EN_DRV_GPIO_PULL_STATUS;

/*!
 * \brief
 *  Enumerate to indicate the Multifunction pin layout.
 */   
#if (CONFIG_CHIP_MODLE == NT78310) 
typedef enum
{
	//IIC0
	EN_DRV_GPIO_IIC0,				//SCL: GPA6,	SDA: GPA7 
	
	//IIC1
	EN_DRV_GPIO_IIC1_PINOUT1,		//SCL: GPB11,	SDA: GPB12
	EN_DRV_GPIO_IIC1_PINOUT2,		//SCL: GPC11,	SDA: GPC12
	EN_DRV_GPIO_IIC1_PINOUT3,		//SCL: GPA12,	SDA: GPA13

	//IIC2
	EN_DRV_GPIO_IIC2,       //not support

	//HDMI_IIC
	EN_DRV_GPIO_HDMI_IIC_PINOUT1,	//SCL: GPB1,  SDA: GPB0 
	EN_DRV_GPIO_HDMI_IIC_PINOUT2,	//SCL: GPG11, SDA: GPG10
	EN_DRV_GPIO_HDMI_IIC_PINOUT3,	//SCL: GPA15, SDA: GPA14
	
	//HDMI_HPD
	EN_DRV_GPIO_HDMI_HPD,			//HPD: GPC15

	//HV_SYNC
	EN_DRV_GPIO_HV_SYNC_PINOUT1,	//Vsync: GPB11,		Hsync: GPB12
	EN_DRV_GPIO_HV_SYNC_PINOUT2,	//Vsync: GPB0,		Hsync: GPB1
	EN_DRV_GPIO_HV_SYNC_PINOUT3,	//Vsync: GPB2,		Hsync: GPB3
	EN_DRV_GPIO_HV_SYNC_PINOUT4,	//Vsync: GPG10,		Hsync: GPG11
	EN_DRV_GPIO_HV_SYNC_PINOUT5,	//Vsync: Non_GPIO,	Hsync: Non_GPIO, Multifuntion with TSI1
	EN_DRV_GPIO_HV_SYNC_PINOUT6,	//Vsync: GPA0,		Hsync: GPA1
	EN_DRV_GPIO_HV_SYNC_PINOUT7,	//Vsync: GPC9,		Hsync: GPC10
	EN_DRV_GPIO_HV_SYNC_PINOUT8,	//Vsync: GPC11,		Hsync: GPC12
	EN_DRV_GPIO_HV_SYNC_PINOUT9,	//Vsync: GPA12,		Hsync: GPA13

	//UART0
	EN_DRV_GPIO_UART0,			//TX: GPA0,		RX: GPA1
	EN_DRV_GPIO_UART0_PINOUT2,	//not support
	EN_DRV_GPIO_UART0_PINOUT3,	//not support

	//UART1
	EN_DRV_GPIO_UART1_PINOUT1,	//TX: GPB2,		RX: GPB3
	EN_DRV_GPIO_UART1_PINOUT2,	//TX: GPA0,		RX: GPA1
	EN_DRV_GPIO_UART1_PINOUT3,	//TX: GPC7,		RX: GPC8
	EN_DRV_GPIO_UART1_PINOUT4,	//TX: GPA12,	RX: GPA13
	
	//UART2
	EN_DRV_GPIO_UART2,			//TX: GPD0,		RX: GPD1
	
	//UART3
	EN_DRV_GPIO_UART3_PINOUT1,	//TX: GPD4,		RX: GPD5
	EN_DRV_GPIO_UART3_PINOUT2,	//TX: GPD13,	RX: GPD14
	EN_DRV_GPIO_UART3_PINOUT3,	//TX: GPF24,	RX: GPF23
	EN_DRV_GPIO_UART3_PINOUT4,	//TX: GPF15,	RX: GPF14

	//CTS_RTS for UART1
	EN_DRV_GPIO_CTS_RTS_PINOUT1,	//CTS: GPB11,	RTS: GPB12
	EN_DRV_GPIO_CTS_RTS_PINOUT2,	//CTS: GPB0,	RTS: GPB1
	EN_DRV_GPIO_CTS_RTS_PINOUT3,	//CTS: GPC11,	RTS: GPC12
	EN_DRV_GPIO_CTS_RTS_PINOUT4,	//CTS: GPA14,	RTS: GPA15

	//SPDIF
	EN_DRV_GPIO_SPDIF,			//GPC14

	//AUDIO_DAC
	EN_DRV_GPIO_AUDIO_71CH_PINOUT1,	//7.1CH, ACK: GPG0,  CLK: GPG1, WS: GPG2, D0: GPG3, D1: GPG4, D2: GPG5, D3: GPG6
	EN_DRV_GPIO_AUDIO_20CH_PINOUT2,	//2.0CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3		
	EN_DRV_GPIO_AUDIO_31CH_PINOUT3,	//3.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2
	EN_DRV_GPIO_AUDIO_51CH_PINOUT4,	//5.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2, D2: GPD8
	EN_DRV_GPIO_AUDIO_71CH_PINOUT5,	//7.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2, D2: GPD8, D3: GPD9
	EN_DRV_GPIO_AUDIO_20CH_PINOUT6,	//2.0CH, ACK: GPA12, CLK: GPA13, WS: GPA14, D0: GPA15
	EN_DRV_GPIO_AUDIO_51CH_PINOUT7,	//5.1CH, ACK: GPD8,  CLK: GPD9, WS: GPD10, D0: GPD11, D1: GPD12, D2: GPD13

	//SPI FALSH
	EN_DRV_GPIO_SPI_1_2BIT,		//CLK: GPC1, CS: GPC5, DIO: GPC2, DO:GPC4, share pin whith NF GPC1, GPC2, GPC4
	EN_DRV_GPIO_SPI_1_2BIT_PINOUT2,	//not support
	EN_DRV_GPIO_SPI_4BIT,		//CLK: GPC1, CS: GPC5, DIO0: GPC2, DIO1:GPC4, DIO2: GPC3, DIO3:GPC0, share pin whith NF GPC1, GPC2, GPC4, GPC3, GPC0

	//CI_COMMON
	EN_DRV_GPIO_CI_COMMON_PINOUT1,	//NonALE_MODE, HA14~0: GPF22~8, HAD7~0: GPF7~0, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT2,	//NonALE_MODE, HA14~0: GPF22~8, HAD7~0: GPF7~0, IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT3,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPB10, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT4,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPB10, IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT5,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPA8,  IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT6,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPA8,  IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT7,	//NonALE_MODE, HA14~0: GPE23 GPE22 GPE21 GPE6 GPF18~17 GPE3 GPF15~8, HAD7~0: GPE31 GPE30 GPE29~24, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25,
	EN_DRV_GPIO_CI_COMMON_PINOUT8,	//ALE_MODE, HA14~0: GPE23 GPE22 GPE21 GPE6 GPF18~17 GPE3, HAD7~0: GPE31 GPE30 GPE29~24, HALE: GPB10, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25,	

	//CI0_CONTROL_PIN
	EN_DRV_GPIO_CI_CI0_PINOUT1,	//CD#: GPF30, CE#: GPF28, IOINT#(I): GPF26, IORD#(O): GPE4, HRD#(O): GPE7
	EN_DRV_GPIO_CI_CI0_PINOUT2,	//CD#: GPF30, CE#: GPF28, IOINT#(I): GPF26, IORD#(O): GPD0, HRD#(O): GPD2
	
	//CI1_CONTROL_PIN
	EN_DRV_GPIO_CI_CI1,			//CD#: GPF31, CE#: GPF29, IOINT#(I): GPF27, IORD#(O): GPE3, HRD#(O): GPE6

	//EXTER DEVICE CS
	EN_DRV_GPIO_CS0_PINOUT1,  //GPB10 
	EN_DRV_GPIO_CS0_PINOUT2,  //GPB0, it also make GPB1 to a function pin
	EN_DRV_GPIO_CS0_PINOUT3,  //GPC11
    EN_DRV_GPIO_CS1_PINOUT1,  //GPB1, it also make GPB0 to a function pin
	EN_DRV_GPIO_CS1_PINOUT2,  //GPC12
	EN_DRV_GPIO_CS1_PINOUT3,  //GPB12

	//AGC_IF
	EN_DRV_GPIO_AGC_IF,				//GPC11
	
	//AGC_RF
	EN_DRV_GPIO_AGC_RF_PINOUT1,		//GPC12
	EN_DRV_GPIO_AGC_RF_PINOUT2,		//GPA8

	//TSERR_LED
	EN_DRV_GPIO_TSERR_LED_PINOUT1,	//GPA8
	EN_DRV_GPIO_TSERR_LED_PINOUT2,	//GPA11

	//EJTAG
	EN_DRV_GPIO_EJTAG,	//TCK: GPC6, TDI: GPC7, TDO: GPC8, TMS: GPC9, TRSTn: GPC10

	//DSP_EJTAG
	EN_DRV_GPIO_DSP_EJTAG,	//not support

	//TSI0
	EN_DRV_GPIO_TSI0_PINOUT1,		//Non_GPIO, Multifuntion with EN_TTL_PINOUT1 & EN_TTL_PINOUT2, input only, reg_tsi0_src_mux[0]=1'b0
	EN_DRV_GPIO_TSI0_PINOUT2,		//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, D1-D7: GPE12~18, reg_tsi0_src_mux[0]=1'b1
	EN_DRV_GPIO_TSI0_PINOUT3_SERIAL,	//CLK: GPC6, SYN: GPC9, VLD: GPC10, D0: GPC7, reg_tsi0_src_mux[0]=1'b1	(FUM)
	EN_DRV_GPIO_TSI0_PINOUT4_SERIAL,	//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, reg_tsi0_src_mux[0]=1'b1 (FUM)

	//TSI1
	EN_DRV_GPIO_TSI1,				//Non_GPIO, Multifuntion with EN_PD_PINOUT5 & EN_HV_SYNC_PINOUT5

	//TSI2
	EN_DRV_GPIO_TSI2,				//Non_GPIO,	independent
    EN_DRV_GPIO_TSI2_PINOUT2_SERIAL,	//CLK: GPG17, SYN: GPG18 VLD: GPG16, D0: GPG22
	
	//TSI3	
	EN_DRV_GPIO_TSI3,				//CLK: GPE21, SYN: GPE30 VLD: GPE31, D0: GPE22, D1~7: GPE23~29	
	EN_DRV_GPIO_TSI3_PINOUT1_SERIAL,	//CLK: GPE21, SYN: GPE30 VLD: GPE31, D0: GPE22
	EN_DRV_GPIO_TSI3_PINOUT2_SERIAL,	//CLK: GPB4, SYN: GPB5 VLD: GPB6, D0: GPB7

	//TSO0
	EN_DRV_GPIO_TSO0,	//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, D1-D7: GPE12~18, Multifuntion with EN_TTL_PINOUT1 & EN_TTL_PINOUT2
	EN_DRV_GPIO_TSO0_PINOUT2,	//not support

	//TSO1	
	EN_DRV_GPIO_TSO1,	//Non_GPIO,	independent

	//TTL
	EN_DRV_GPIO_TTL_PINOUT1,	//TTL_COM:GPE 12~15, TTL_G: GPE10~11, GPG23~26, GPF28,30, TTL_R: Non_GPIO, TTL_B0-2:Non_GPIO, Multifuntion with TSI0  

	//PD: CCIR656
	EN_DRV_GPIO_PD_PINOUT1,	//PD0-7: GPG0~7, PD_CLK: GPG8
	EN_DRV_GPIO_PD_PINOUT2,	//PD0-7: GPB2~9, PD_CLK: GPA4
	EN_DRV_GPIO_PD_PINOUT3,	//PD0-5: GPB2~7, PD_CLK: GPA4, PD6-7: GPG25~26,
	EN_DRV_GPIO_PD_PINOUT4,	//PD0-7: GPG16~23, PD_CLK: GPG24
	EN_DRV_GPIO_PD_PINOUT5,	//PD0-7: Non_GPIO, PD_CLK: Non-GPIO, Multifuntion with TSI1
	EN_DRV_GPIO_PD_PINOUT6,	//PD0-7: GPF8~15, PD_CLK: GPC6
	EN_DRV_GPIO_PD_PINOUT7,	//PD0-7: GPF8~15, PD_CLK: GPA4

	//RMII: Enthernet
	EN_DRV_GPIO_RMII_PINOUT1,	//GPG0~8	
	EN_DRV_GPIO_RMII_PINOUT2,	//GPG16~24
	
	//(SD, MMC), MS, please consider with SD_MS_PWE
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT1,	//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT2,	//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT3,	//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT4,	//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT1,	//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, D1-3: GPD11,4,5
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT2,	//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, D1-3: GPB6,5,4
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT3,	//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT4,	//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT1,		//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, MSINS:GPD10
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT2,		//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, MSINS:GPB2
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT3,		//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT4,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT1,		//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, D1-3: GPD11,4,5, MSINS:GPD10 
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT2,		//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, D1-3: GPB6,5,4, MSINS:GPB2
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT3,		//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT4,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT5,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18, MSINS:GPG21
	EN_DRV_GPIO_MS_ONLY_8BIT,			//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22, MSINS:GPG21, D4-7: GPF4~7

	//SD_MS_PWE
	EN_DRV_GPIO_SD_MS_PWE,				//PWE: GPG15
	EN_DRV_GPIO_SD_MS_PWE_PINOUT2,		//not support

	//SDIO
	EN_DRV_GPIO_SDIO1,			//D3-D0: GPF22~19, CMD: GPF18, CLK: GPA4, SDIOD0-3 share pin with CI & XD & NF	
	
	//SDIO_CD_WP
	EN_DRV_GPIO_SDIO1_CD_WP,		//CD1#: GPE3, WP: GPE6

	//XD_NF_COMMON
	EN_DRV_GPIO_XD_NF_COMMON,	//ALE:GPF22, CLE: GPF21, RE#: GPF20, WE#: GPF19, WP#: GPF16, D7~0: GPF7,6,5,4,3,2,1,0

	//XD				share pin with EN_NF_8BIT & EN_NF_16BIT GPF22,21,20,19,16,7,6,5,4,3,2,1,0, share pin  EN_SD_ONLY_4BIT_PINOUT3 & EN_SD_MS_4BIT_PINOUT3
	EN_DRV_GPIO_XD,				//CD: GPG16, CE: GPG17, BSY: GPG18 

	//NF
	EN_DRV_GPIO_NF_8BIT,			//CE0: GPC3, CE1: GPC0, CE2: GPC2, CE3: GPC4, BSY: GPC1
	EN_DRV_GPIO_NF_16BIT,			//CE0: GPC3, CE1: GPC0, CE2: GPC2, CE3: GPC4, BSY: GPC1, GPF15,14,13,12,11,10,9,8
	EN_DRV_GPIO_NF_8BIT_PINOUT2,	//CE0: GPF23, CE1: GPF24, CE2: GPF27, CE3: GPF39, BSY: GPF31

	//SC0 (Smart Card)
	EN_DRV_GPIO_SC0_PINOUT1,		//CLK: GPD0, DAT: GPD1, PWR: GPD2, RST: GPD3, CD:GPA2
	EN_DRV_GPIO_SC0_PINOUT2,		//CLK: GPB2, DAT: GPB3, PWR: GPB4, RST: GPB5, CD:GPB6
	
	//SC1 (Smart Card)
	EN_DRV_GPIO_SC1_PINOUT1,		//CLK: GPD4, DAT: GPD5, PWR: GPD6, RST: GPD7, CD:GPA3
	EN_DRV_GPIO_SC1_PINOUT2,		//CLK: GPD13, DAT: GPD14, PWR: GPE0, RST: GPE1, CD:GPE2
	EN_DRV_GPIO_SC1_PINOUT3,		//CLK: GPF24, DAT: GPF23, PWR: GPF28, RST: GPF26, CD:GPF25
	EN_DRV_GPIO_SC1_PINOUT4,		//CLK: GPD13, DAT: GPD14, PWR: GPG17, RST: GPG18, CD:GPG22
	EN_DRV_GPIO_SC1_PINOUT5,		//CLK: GPF15, DAT: GPF14, PWR: GPF13, RST: GPF12, CD:GPF11
	
	//FP
	//Keydet0, GPB14, GPB9, GPA4 
	//Keydet1, GPB11, GPG25, GPB3, GPB8
	//Keydet2, GPG26, GPB2, GPB7, GPB9
	//Dsplycm0, Dsplycm1, Dsplycm2, Dsplycm3, 
	//Dsplycm4, GPB14, GPB11, GPG25, GPB8
	//Dsplyclk, GPB3 DsplyA, GPB2
	//FP_KEYD0
	EN_DRV_GPIO_FP_KEYD0_PINOUT1,		//Keydet0, GPB14
	EN_DRV_GPIO_FP_KEYD0_PINOUT2,		//Keydet0, GPB9
	EN_DRV_GPIO_FP_KEYD0_PINOUT3,		//Keydet0, GPA4 
	//FP_KEYD1
	EN_DRV_GPIO_FP_KEYD1_PINOUT1,		//Keydet1, GPB11
	EN_DRV_GPIO_FP_KEYD1_PINOUT2,		//Keydet1, GPG25
	EN_DRV_GPIO_FP_KEYD1_PINOUT3,		//Keydet1, GPB3
	EN_DRV_GPIO_FPDKEYD1_PINOUT4,		//Keydet1, GPB8
	//FP_KEYD2
	EN_DRV_GPIO_FP_KEYD2_PINOUT1,		//Keydet2, GPG26
	EN_DRV_GPIO_FP_KEYD2_PINOUT2,		//Keydet2, GPB2
	EN_DRV_GPIO_FP_KEYD2_PINOUT3,		//Keydet2, GPB7
	EN_DRV_GPIO_FP_KEYD2_PINOUT4,		//Keydet2, GPB9

	//7SEGMEN_DCODE(74-164)
	EN_DRV_GPIO_FP_164,					//Dsplyclk, GPB3 DsplyA, GPB2
	
	//7SEGMEN_DSPLAY
	EN_DRV_GPIO_FP_LED_2,				//Dsplycm0: GPB4, Dsplycm1: GPB5
	EN_DRV_GPIO_FP_LED_3,				//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6
	EN_DRV_GPIO_FP_LED_4,				//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7,
	EN_DRV_GPIO_FP_LED_5_PINOUT1,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4;	GPB8
	EN_DRV_GPIO_FP_LED_5_PINOUT2,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4: GPB11
	EN_DRV_GPIO_FP_LED_5_PINOUT3,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4: GPG25

	//PWM0
	EN_DRV_GPIO_PWM0_PINOUT1,	//GPG10, GPG11 also set to func pin.
	EN_DRV_GPIO_PWM0_PINOUT2,	//GPA9
	EN_DRV_GPIO_PWM0_PINOUT3,	//GPA12

	//PWM1
	EN_DRV_GPIO_PWM1_PINOUT1,	//GPG11, GPG10 also set to func pin.
	EN_DRV_GPIO_PWM1_PINOUT2,	//GPC6
	EN_DRV_GPIO_PWM1_PINOUT3,	//GPA10
	EN_DRV_GPIO_PWM1_PINOUT4,	//GPA13

	//PWM2
	EN_DRV_GPIO_PWM2_PINOUT1,	//not support

	//SAR-ADC
	EN_DRV_GPIO_SAR_ADC2,		//GPA9

	//LNB:DiseqC
	EN_DRV_LNB_DEMOD,			//DiseqC In: GPB1, DiseqC Out: GPB0
	EN_DRV_LNB_ANALOG,			//DiseqC In: GPB1, Hiz(For LNB Control): GPB0

	EN_DRV_GPIO_FUN_NUM,
}EN_DRV_GPIO_FUN;
#endif

#if (CONFIG_CHIP_MODLE == NT78316) 
typedef enum
{
	//IIC0
	EN_DRV_GPIO_IIC0,				//SCL: GPA6,	SDA: GPA7 
	
	//IIC1
	EN_DRV_GPIO_IIC1_PINOUT1,		//SCL: GPB11,	SDA: GPB12
	EN_DRV_GPIO_IIC1_PINOUT2,		//SCL: GPC11,	SDA: GPC12
	EN_DRV_GPIO_IIC1_PINOUT3,		//SCL: GPA12,	SDA: GPA13

	//IIC2
	EN_DRV_GPIO_IIC2,       //not support

	//HDMI_IIC
	EN_DRV_GPIO_HDMI_IIC_PINOUT1,	//SCL: GPB1,  SDA: GPB0 
	EN_DRV_GPIO_HDMI_IIC_PINOUT2,	//SCL: GPG11, SDA: GPG10
	EN_DRV_GPIO_HDMI_IIC_PINOUT3,	//SCL: GPA15, SDA: GPA14
	
	//HDMI_HPD
	EN_DRV_GPIO_HDMI_HPD,			//HPD: GPC15

	//HV_SYNC
	EN_DRV_GPIO_HV_SYNC_PINOUT1,	//Vsync: GPB11,		Hsync: GPB12
	EN_DRV_GPIO_HV_SYNC_PINOUT2,	//Vsync: GPB0,		Hsync: GPB1
	EN_DRV_GPIO_HV_SYNC_PINOUT3,	//Vsync: GPB2,		Hsync: GPB3
	EN_DRV_GPIO_HV_SYNC_PINOUT4,	//Vsync: GPG10,		Hsync: GPG11
	EN_DRV_GPIO_HV_SYNC_PINOUT5,	//Vsync: Non_GPIO,	Hsync: Non_GPIO, Multifuntion with TSI1
	EN_DRV_GPIO_HV_SYNC_PINOUT6,	//Vsync: GPA0,		Hsync: GPA1
	EN_DRV_GPIO_HV_SYNC_PINOUT7,	//Vsync: GPC9,		Hsync: GPC10
	EN_DRV_GPIO_HV_SYNC_PINOUT8,	//Vsync: GPC11,		Hsync: GPC12
	EN_DRV_GPIO_HV_SYNC_PINOUT9,	//Vsync: GPA12,		Hsync: GPA13

	//UART0
	EN_DRV_GPIO_UART0,			//TX: GPA0,		RX: GPA1
	EN_DRV_GPIO_UART0_PINOUT2,	//not support
	EN_DRV_GPIO_UART0_PINOUT3,	//not support

	//UART1
	EN_DRV_GPIO_UART1_PINOUT1,	//TX: GPB2,		RX: GPB3
	EN_DRV_GPIO_UART1_PINOUT2,	//TX: GPA0,		RX: GPA1
	EN_DRV_GPIO_UART1_PINOUT3,	//TX: GPC7,		RX: GPC8
	EN_DRV_GPIO_UART1_PINOUT4,	//TX: GPA12,	RX: GPA13
	
	//UART2
	EN_DRV_GPIO_UART2,			//TX: GPD0,		RX: GPD1
	
	//UART3
	EN_DRV_GPIO_UART3_PINOUT1,	//TX: GPD4,		RX: GPD5
	EN_DRV_GPIO_UART3_PINOUT2,	//TX: GPD13,	RX: GPD14
	EN_DRV_GPIO_UART3_PINOUT3,	//TX: GPF24,	RX: GPF23
	EN_DRV_GPIO_UART3_PINOUT4,	//TX: GPF15,	RX: GPF14

	//CTS_RTS for UART1
	EN_DRV_GPIO_CTS_RTS_PINOUT1,	//CTS: GPB11,	RTS: GPB12
	EN_DRV_GPIO_CTS_RTS_PINOUT2,	//CTS: GPB0,	RTS: GPB1
	EN_DRV_GPIO_CTS_RTS_PINOUT3,	//CTS: GPC11,	RTS: GPC12
	EN_DRV_GPIO_CTS_RTS_PINOUT4,	//CTS: GPA14,	RTS: GPA15

	//SPDIF
	EN_DRV_GPIO_SPDIF,			//GPC14

	//AUDIO_DAC
	EN_DRV_GPIO_AUDIO_71CH_PINOUT1,	//7.1CH, ACK: GPG0,  CLK: GPG1, WS: GPG2, D0: GPG3, D1: GPG4, D2: GPG5, D3: GPG6
	EN_DRV_GPIO_AUDIO_20CH_PINOUT2,	//2.0CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3		
	EN_DRV_GPIO_AUDIO_31CH_PINOUT3,	//3.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2
	EN_DRV_GPIO_AUDIO_51CH_PINOUT4,	//5.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2, D2: GPD8
	EN_DRV_GPIO_AUDIO_71CH_PINOUT5,	//7.1CH, ACK: GPD0,  CLK: GPD1, WS: GPD2, D0: GPD3, D1: GPA2, D2: GPD8, D3: GPD9
	EN_DRV_GPIO_AUDIO_20CH_PINOUT6,	//2.0CH, ACK: GPA12, CLK: GPA13, WS: GPA14, D0: GPA15
	EN_DRV_GPIO_AUDIO_51CH_PINOUT7,	//5.1CH, ACK: GPD8,  CLK: GPD9, WS: GPD10, D0: GPD11, D1: GPD12, D2: GPD13

	//SPI FALSH
	EN_DRV_GPIO_SPI_1_2BIT,		//CLK: GPC1, CS: GPC5, DIO: GPC2, DO:GPC4, share pin whith NF GPC1, GPC2, GPC4
	EN_DRV_GPIO_SPI_1_2BIT_PINOUT2,	//not support
	EN_DRV_GPIO_SPI_4BIT,		//CLK: GPC1, CS: GPC5, DIO0: GPC2, DIO1:GPC4, DIO2: GPC3, DIO3:GPC0, share pin whith NF GPC1, GPC2, GPC4, GPC3, GPC0

	//CI_COMMON
	EN_DRV_GPIO_CI_COMMON_PINOUT1,	//NonALE_MODE, HA14~0: GPF22~8, HAD7~0: GPF7~0, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT2,	//NonALE_MODE, HA14~0: GPF22~8, HAD7~0: GPF7~0, IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT3,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPB10, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT4,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPB10, IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT5,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPA8,  IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23
	EN_DRV_GPIO_CI_COMMON_PINOUT6,	//ALE_MODE, HA14~0: GPF22~16, HAD7~0: GPF7~0, HALE: GPA8,  IOWR#: GPD1, HWR#: GPD3, REG(O): GPA2, CI_HWAIT: GPF25, 245_EN#: GPF24, 245_DIR#: GPF23, this setting must be with EN_DRV_GPIO_CI_CI0_PINOUT2
	EN_DRV_GPIO_CI_COMMON_PINOUT7,	//NonALE_MODE, HA14~0: GPE23 GPE22 GPE21 GPE6 GPF18~17 GPE3 GPF15~8, HAD7~0: GPE31 GPE30 GPE29~24, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25,
	EN_DRV_GPIO_CI_COMMON_PINOUT8,	//ALE_MODE, HA14~0: GPE23 GPE22 GPE21 GPE6 GPF18~17 GPE3, HAD7~0: GPE31 GPE30 GPE29~24, HALE: GPB10, IOWR#: GPE5, HWR#: GPE8, REG(O): GPE9, CI_HWAIT: GPF25,	

	//CI0_CONTROL_PIN
	EN_DRV_GPIO_CI_CI0_PINOUT1,	//CD#: GPF30, CE#: GPF28, IOINT#(I): GPF26, IORD#(O): GPE4, HRD#(O): GPE7
	EN_DRV_GPIO_CI_CI0_PINOUT2,	//CD#: GPF30, CE#: GPF28, IOINT#(I): GPF26, IORD#(O): GPD0, HRD#(O): GPD2
	
	//CI1_CONTROL_PIN
	EN_DRV_GPIO_CI_CI1,			//CD#: GPF31, CE#: GPF29, IOINT#(I): GPF27, IORD#(O): GPE3, HRD#(O): GPE6

	//EXTER DEVICE CS
	EN_DRV_GPIO_CS0_PINOUT1,  //GPB10 
	EN_DRV_GPIO_CS0_PINOUT2,  //GPB0, it also make GPB1 to a function pin
	EN_DRV_GPIO_CS0_PINOUT3,  //GPC11
    EN_DRV_GPIO_CS1_PINOUT1,  //GPB1, it also make GPB0 to a function pin
	EN_DRV_GPIO_CS1_PINOUT2,  //GPC12
	EN_DRV_GPIO_CS1_PINOUT3,  //GPB12

	//AGC_IF
	EN_DRV_GPIO_AGC_IF,				//GPC11
	
	//AGC_RF
	EN_DRV_GPIO_AGC_RF_PINOUT1,		//GPC12
	EN_DRV_GPIO_AGC_RF_PINOUT2,		//GPA8

	//TSERR_LED
	EN_DRV_GPIO_TSERR_LED_PINOUT1,	//GPA8
	EN_DRV_GPIO_TSERR_LED_PINOUT2,	//GPA11

	//EJTAG
	EN_DRV_GPIO_EJTAG,	//TCK: GPC6, TDI: GPC7, TDO: GPC8, TMS: GPC9, TRSTn: GPC10

	//DSP_EJTAG
	EN_DRV_GPIO_DSP_EJTAG,	//not support

	//TSI0
	EN_DRV_GPIO_TSI0_PINOUT1,		//Non_GPIO, Multifuntion with EN_TTL_PINOUT1 & EN_TTL_PINOUT2, input only, reg_tsi0_src_mux[0]=1'b0
	EN_DRV_GPIO_TSI0_PINOUT2,		//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, D1-D7: GPE12~18, reg_tsi0_src_mux[0]=1'b1
	EN_DRV_GPIO_TSI0_PINOUT3_SERIAL,	//CLK: GPC6, SYN: GPC9, VLD: GPC10, D0: GPC7, reg_tsi0_src_mux[0]=1'b1	(FUM)
	EN_DRV_GPIO_TSI0_PINOUT4_SERIAL,	//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, reg_tsi0_src_mux[0]=1'b1 (FUM)

	//TSI1
	EN_DRV_GPIO_TSI1,				//Non_GPIO, Multifuntion with EN_PD_PINOUT5 & EN_HV_SYNC_PINOUT5

	//TSI2
	EN_DRV_GPIO_TSI2,				//Non_GPIO,	independent
    EN_DRV_GPIO_TSI2_PINOUT2_SERIAL,	//CLK: GPG17, SYN: GPG18 VLD: GPG16, D0: GPG22
	
	//TSI3	
	EN_DRV_GPIO_TSI3,				//CLK: GPE21, SYN: GPE30 VLD: GPE31, D0: GPE22, D1~7: GPE23~29	
	EN_DRV_GPIO_TSI3_PINOUT1_SERIAL,	//CLK: GPE21, SYN: GPE30 VLD: GPE31, D0: GPE22
	EN_DRV_GPIO_TSI3_PINOUT2_SERIAL,	//CLK: GPB4, SYN: GPB5 VLD: GPB6, D0: GPB7

	//TSO0
	EN_DRV_GPIO_TSO0,	//CLK: GPE10, SYN: GPE19, VLD: GPE20, D0: GPE11, D1-D7: GPE12~18, Multifuntion with EN_TTL_PINOUT1 & EN_TTL_PINOUT2
	EN_DRV_GPIO_TSO0_PINOUT2,	//not support

	//TSO1	
	EN_DRV_GPIO_TSO1,	//Non_GPIO,	independent

	//TTL
	EN_DRV_GPIO_TTL_PINOUT1,	//TTL_COM:GPE 12~15, TTL_G: GPE10~11, GPG23~26, GPF28,30, TTL_R: Non_GPIO, TTL_B0-2:Non_GPIO, Multifuntion with TSI0  

	//PD: CCIR656
	EN_DRV_GPIO_PD_PINOUT1,	//PD0-7: GPG0~7, PD_CLK: GPG8
	EN_DRV_GPIO_PD_PINOUT2,	//PD0-7: GPB2~9, PD_CLK: GPA4
	EN_DRV_GPIO_PD_PINOUT3,	//PD0-5: GPB2~7, PD_CLK: GPA4, PD6-7: GPG25~26,
	EN_DRV_GPIO_PD_PINOUT4,	//PD0-7: GPG16~23, PD_CLK: GPG24
	EN_DRV_GPIO_PD_PINOUT5,	//PD0-7: Non_GPIO, PD_CLK: Non-GPIO, Multifuntion with TSI1
	EN_DRV_GPIO_PD_PINOUT6,	//PD0-7: GPF8~15, PD_CLK: GPC6
	EN_DRV_GPIO_PD_PINOUT7,	//PD0-7: GPF8~15, PD_CLK: GPA4

	//RMII: Enthernet
	EN_DRV_GPIO_RMII_PINOUT1,	//GPG0~8	
	EN_DRV_GPIO_RMII_PINOUT2,	//GPG16~24
	
	//(SD, MMC), MS, please consider with SD_MS_PWE
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT1,	//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT2,	//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT3,	//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23
	EN_DRV_GPIO_SD_ONLY_1BIT_PINOUT4,	//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT1,	//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, D1-3: GPD11,4,5
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT2,	//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, D1-3: GPB6,5,4
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT3,	//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18
	EN_DRV_GPIO_SD_ONLY_4BIT_PINOUT4,	//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT1,		//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, MSINS:GPD10
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT2,		//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, MSINS:GPB2
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT3,		//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_1BIT_PINOUT4,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT1,		//CMD: GPD7, CLK: GPD8, WP:GPD9, CD: GPA3, D0:GPD12, D1-3: GPD11,4,5, MSINS:GPD10 
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT2,		//CMD: GPB11, CLK: GPA4, WP:GPB3, CD: GPB12, D0:GPB7, D1-3: GPB6,5,4, MSINS:GPB2
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT3,		//CMD: GPG16, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT4,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22, MSINS:GPG21
	EN_DRV_GPIO_SD_MS_4BIT_PINOUT5,		//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPG22, GPG17, GPG18, MSINS:GPG21
	EN_DRV_GPIO_MS_ONLY_8BIT,			//CMD: GPF17, CLK: GPG19, WP:GPG20, CD: GPG24, D0:GPG23, D1-3: GPF2,3 GPG22, MSINS:GPG21, D4-7: GPF4~7

	//SD_MS_PWE
	EN_DRV_GPIO_SD_MS_PWE,				//PWE: GPG15
	EN_DRV_GPIO_SD_MS_PWE_PINOUT2,		//not support

	//SDIO
	EN_DRV_GPIO_SDIO1,			//D3-D0: GPF22~19, CMD: GPF18, CLK: GPA4, SDIOD0-3 share pin with CI & XD & NF	
	
	//SDIO_CD_WP
	EN_DRV_GPIO_SDIO1_CD_WP,		//CD1#: GPE3, WP: GPE6

	//XD_NF_COMMON
	EN_DRV_GPIO_XD_NF_COMMON,	//ALE:GPF22, CLE: GPF21, RE#: GPF20, WE#: GPF19, WP#: GPF16, D7~0: GPF7,6,5,4,3,2,1,0

	//XD				share pin with EN_NF_8BIT & EN_NF_16BIT GPF22,21,20,19,16,7,6,5,4,3,2,1,0, share pin  EN_SD_ONLY_4BIT_PINOUT3 & EN_SD_MS_4BIT_PINOUT3
	EN_DRV_GPIO_XD,				//CD: GPG16, CE: GPG17, BSY: GPG18 

	//NF
	EN_DRV_GPIO_NF_8BIT,			//CE0: GPC3, CE1: GPC0, CE2: GPC2, CE3: GPC4, BSY: GPC1
	EN_DRV_GPIO_NF_16BIT,			//CE0: GPC3, CE1: GPC0, CE2: GPC2, CE3: GPC4, BSY: GPC1, GPF15,14,13,12,11,10,9,8
	EN_DRV_GPIO_NF_8BIT_PINOUT2,	//CE0: GPF23, CE1: GPF24, CE2: GPF27, CE3: GPF39, BSY: GPF31

	//SC0 (Smart Card)
	EN_DRV_GPIO_SC0_PINOUT1,		//CLK: GPD0, DAT: GPD1, PWR: GPD2, RST: GPD3, CD:GPA2
	EN_DRV_GPIO_SC0_PINOUT2,		//CLK: GPB2, DAT: GPB3, PWR: GPB4, RST: GPB5, CD:GPB6
	
	//SC1 (Smart Card)
	EN_DRV_GPIO_SC1_PINOUT1,		//CLK: GPD4, DAT: GPD5, PWR: GPD6, RST: GPD7, CD:GPA3
	EN_DRV_GPIO_SC1_PINOUT2,		//CLK: GPD13, DAT: GPD14, PWR: GPE0, RST: GPE1, CD:GPE2
	EN_DRV_GPIO_SC1_PINOUT3,		//CLK: GPF24, DAT: GPF23, PWR: GPF28, RST: GPF26, CD:GPF25
	EN_DRV_GPIO_SC1_PINOUT4,		//CLK: GPD13, DAT: GPD14, PWR: GPG17, RST: GPG18, CD:GPG22
	EN_DRV_GPIO_SC1_PINOUT5,		//CLK: GPF15, DAT: GPF14, PWR: GPF13, RST: GPF12, CD:GPF11
	
	//FP
	//Keydet0, GPB14, GPB9, GPA4 
	//Keydet1, GPB11, GPG25, GPB3, GPB8
	//Keydet2, GPG26, GPB2, GPB7, GPB9
	//Dsplycm0, Dsplycm1, Dsplycm2, Dsplycm3, 
	//Dsplycm4, GPB14, GPB11, GPG25, GPB8
	//Dsplyclk, GPB3 DsplyA, GPB2
	//FP_KEYD0
	EN_DRV_GPIO_FP_KEYD0_PINOUT1,		//Keydet0, GPB14
	EN_DRV_GPIO_FP_KEYD0_PINOUT2,		//Keydet0, GPB9
	EN_DRV_GPIO_FP_KEYD0_PINOUT3,		//Keydet0, GPA4 
	//FP_KEYD1
	EN_DRV_GPIO_FP_KEYD1_PINOUT1,		//Keydet1, GPB11
	EN_DRV_GPIO_FP_KEYD1_PINOUT2,		//Keydet1, GPG25
	EN_DRV_GPIO_FP_KEYD1_PINOUT3,		//Keydet1, GPB3
	EN_DRV_GPIO_FPDKEYD1_PINOUT4,		//Keydet1, GPB8
	//FP_KEYD2
	EN_DRV_GPIO_FP_KEYD2_PINOUT1,		//Keydet2, GPG26
	EN_DRV_GPIO_FP_KEYD2_PINOUT2,		//Keydet2, GPB2
	EN_DRV_GPIO_FP_KEYD2_PINOUT3,		//Keydet2, GPB7
	EN_DRV_GPIO_FP_KEYD2_PINOUT4,		//Keydet2, GPB9

	//7SEGMEN_DCODE(74-164)
	EN_DRV_GPIO_FP_164,					//Dsplyclk, GPB3 DsplyA, GPB2
	
	//7SEGMEN_DSPLAY
	EN_DRV_GPIO_FP_LED_2,				//Dsplycm0: GPB4, Dsplycm1: GPB5
	EN_DRV_GPIO_FP_LED_3,				//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6
	EN_DRV_GPIO_FP_LED_4,				//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7,
	EN_DRV_GPIO_FP_LED_5_PINOUT1,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4;	GPB8
	EN_DRV_GPIO_FP_LED_5_PINOUT2,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4: GPB11
	EN_DRV_GPIO_FP_LED_5_PINOUT3,		//Dsplycm0: GPB4, Dsplycm1: GPB5, Dsplycm2: GPB6, Dsplycm3: GPB7, Dsplycm4: GPG25

	//PWM0
	EN_DRV_GPIO_PWM0_PINOUT1,	//GPG10, GPG11 also set to func pin.
	EN_DRV_GPIO_PWM0_PINOUT2,	//GPA9
	EN_DRV_GPIO_PWM0_PINOUT3,	//GPA12

	//PWM1
	EN_DRV_GPIO_PWM1_PINOUT1,	//GPG11, GPG10 also set to func pin.
	EN_DRV_GPIO_PWM1_PINOUT2,	//GPC6
	EN_DRV_GPIO_PWM1_PINOUT3,	//GPA10
	EN_DRV_GPIO_PWM1_PINOUT4,	//GPA13

	//PWM2
	EN_DRV_GPIO_PWM2_PINOUT1,	//not support

	//SAR-ADC
	EN_DRV_GPIO_SAR_ADC2,		//GPA9

	//LNB:DiseqC
	EN_DRV_LNB_DEMOD,			//DiseqC In: GPB1, DiseqC Out: GPB0
	EN_DRV_LNB_ANALOG,			//DiseqC In: GPB1, Hiz(For LNB Control): GPB0

	EN_DRV_GPIO_FUN_NUM,
}EN_DRV_GPIO_FUN;
#endif

//#else
#if (CONFIG_CHIP_MODLE == NT78320) 
typedef enum
{
	//IIC0 Fun ==>0
	EN_DRV_GPIO_IIC0,				//SCL: GPE4,	SDA: GPE5

    //IIC1 70, 71
    EN_DRV_GPIO_IIC1,       //GPA1=SCL1, GPA2=SDA1
	EN_DRV_GPIO_IIC1_PINOUT2,		//not support
	EN_DRV_GPIO_IIC1_PINOUT3,		//not support

	//IIC2
	EN_DRV_GPIO_IIC2,       //GPD19=SCL2,GPD20=SDA2

    //USB Fun ==> 1
    EN_DRV_GPIO_USB,            //USB1_PWE: GPA0
    
   	//EJTAG Fun ==> 1,2
	EN_DRV_GPIO_EJTAG_PINOUT1,	//TCK: GPA3, TDI: GPA4, TDO: GPA5, TMS: GPA6, TRSTn: GPA7
    EN_DRV_GPIO_EJTAG_PINOUT2,	//TCK: GPF5, TDI: GPF4, TDO: GPF0, TMS: GPF1, TRSTn: GPF2
    
	
	//UART0 Fun ==> 3,4
	EN_DRV_GPIO_UART0_PINOUT1,	//TX: GPA8,		RX: GPA9
	EN_DRV_GPIO_UART0_PINOUT2,	//TX: GPA4,		RX: GPA5

    //UART1 Fun ==> 5,6,7
	EN_DRV_GPIO_UART1_PINOUT1,			//TX: GPA8,		RX: GPA9
	EN_DRV_GPIO_UART1_PINOUT2,          //TX:GPD19           RX:GPD20
	EN_DRV_GPIO_UART1_PINOUT3,          //TX:GPK9           RX:GPK10

	//UART2 Fun ==> 8
	EN_DRV_GPIO_UART2,	       //TX: GPF10,		RX: GPF11

	//UART3 Fun ==> 9
	EN_DRV_GPIO_UART3,	       //TX: GPF15,		RX: GPF16

	//PWM0 Fun ==> 10,11,12
	EN_DRV_GPIO_PWM0_PINOUT1,	        //GPA1
	EN_DRV_GPIO_PWM0_PINOUT2,           //GPD17
	EN_DRV_GPIO_PWM0_PINOUT3,           //GPE1

	//PWM1 Fun ==> 13
	EN_DRV_GPIO_PWM1,          //GPA2

	//PWM2 Fun ==> 14
	EN_DRV_GPIO_PWM2,          //GPE2

	//FUM Fun ==>15
    EN_DRV_GPIO_FUM_NUM,            //GPA3~7
	
    //IIC_HDMI Fun ==>16
    EN_DRV_GPIO_IIC_HDMI,     //SDA_HDMI:GPB1, SCL_HDMI:GPB0

       //SPDIF Fun ==>17
	EN_DRV_GPIO_SPDIF,			//GPB2

    //TSI0 Fun ==>18
	EN_DRV_GPIO_TSI0,         //GPH[11,12:19,20,21] = {TSI0_CLK,D0~7, SYN, VLD}

	//TSI1 Fun ==>19
	EN_DRV_GPIO_TSI1,		 //GPI[0,1:8,9,10] = {TSI1_CLK,D0~7, SYN, VLD}
	
    //TSI2  Fun ==>20
    EN_DRV_GPIO_TSI2,	//TSI2_CLK: GPC9, TSI2_D0:GPC10, TSI2_D1:GPC11, TSI2_D2:GPC12, TSI2_D3:GPC13, TSI2_D4:GPC14, TSI2_D5:GPC15, TSI2_D6:GPC16, TSI2_D7:GPC17, TSI2_SYN:GPC18, TSI2_VLD:GPC19
    //21
    EN_DRV_GPIO_TSI3,   // GPG25, GPG24, GPH18, GPH16 
    //22
	EN_DRV_GPIO_TSI4,   //GPF10,11,12,13
	
    //RMII: Enthernet Fun ==>23,24,25
	EN_DRV_GPIO_RMII_PINOUT1,	//GPC0~8	
	EN_DRV_GPIO_RMII_PINOUT2,	//GPG17,19,20~24,26~27
	EN_DRV_GPIO_RMII_PINOUT3,   //GPK9~17

	//NF Fun ==>26,27
	EN_DRV_GPIO_NF_PINOUT1,	//GPD[0~7] = NF_D0~7  GPD[8] = NF_ALE  GPD[9] = NF_CLE  GPD[10] = NF_RE# GPD[11] = NF_WE#
	EN_DRV_GPIO_NF_PINOUT2,	//GPJ[18:25,27,28,29,30] = {NF_D0~7, WE, ALE, CLE, RE}

    //NF Fun ==>28~39
	EN_DRV_GPIO_NF_BSY_OUTPUT1, //GPD[16]
	EN_DRV_GPIO_NF_BSY_OUTPUT2, //GPD[25]
	EN_DRV_GPIO_NF_CE0_OUTPUT1, //GPD[12]
	EN_DRV_GPIO_NF_CE0_OUTPUT2, //GPD[27]
	EN_DRV_GPIO_NF_CE1_OUTPUT1, //GPD[13]
	EN_DRV_GPIO_NF_CE1_OUTPUT2, //GPD[28]
	EN_DRV_GPIO_NF_CE2_OUTPUT1, //GPD[14]
	EN_DRV_GPIO_NF_CE2_OUTPUT2, //GPD[29]
	EN_DRV_GPIO_NF_CE3_OUTPUT1, //GPD[15]
	EN_DRV_GPIO_NF_CE3_OUTPUT2, //GPD[30]
	EN_DRV_GPIO_NF_WP_OUTPUT1, //GPD[15]
	EN_DRV_GPIO_NF_WP_OUTPUT2, //GPD[30]

    //DiSEqC Fun ==>40
	EN_DRV_GPIO_DiSEqC,        //DiSEqC_RX: GPE0 AGC_IF:GPE3
	
	//TS_ERR Fun ==>42
	EN_DRV_GPIO_TS_ERR,

	//TSO0 Fun ==>43
	EN_DRV_GPIO_TSO0,	//CLK: GPG17, SYN: GPG26, VLD: GPG27, D0~D7: GPG18~25

	//TSO1	 Fun ==>44
	EN_DRV_GPIO_TSO1,	// GPH[0,1:8,9,10] = {TSO1_CLK,D0~7, SYN, VLD}

    //SD/MS Fun ==>45,46,47,48
    EN_DRV_GPIO_SD_MS_1BIT,		//GPF[0,4,5] = {SD/MS_D0, SD/MS_CMD, SD/MS_CLK}, GPF[1,2,3] = {SD/MS_D1, D2, D3},GPF[8] = SD_CD, GPF[7] = MS_INS, GPF[6] = SD_WP,
	EN_DRV_GPIO_SD_MS_4BIT,	
    EN_DRV_GPIO_SD_ONLY_1BIT,		//GPK[11,15,16] = {SD_D0, CMD, CLK},  GPK[12:14] = {SD_D1~3}, GPK[10] = {SD_WP}, GPK[17] = {SD_CD}
	EN_DRV_GPIO_SD_ONLY_4BIT,	

   	//SD_MS_PWE Fun ==>49
	EN_DRV_GPIO_SD_MS_PWE,				//PWE: GPF9
	//SC0 (Smart Card) Fun ==>50
	EN_DRV_GPIO_SC0,		//CLK: GPF10, DAT: GPF11, PWR: GPF12, RST: GPF13, CD:GPF14
	
	//SC1(Smart Card) Fun ==>51,52
	EN_DRV_GPIO_SC1_OUTPUT1,		//CLK: GPF15, DAT: GPF16, PWR: GPF17, RST: GPF18, CD:GPF19
	EN_DRV_GPIO_SC1_OUTPUT2,		//GPJ4,5,6,16,17
	EN_DRV_GPIO_SC1_OUTPUT3,        //Only for NT78326ST  
    EN_DRV_GPIO_SC1_OUTPUT4, 


	//FP
	//Keydet0, GPK16 
	//Keydet1, GPK10, GPK15, GPK17
	//Keydet2, GPK9, GPK14, GPK17
	//Dsplycm0, Dsplycm1, Dsplycm2, Dsplycm3, 
	//Dsplycm4, GPK11~15
	//Dsplyclk, GPK10 DsplyA, GPK9
	//FP_KEYD0
	EN_DRV_GPIO_FP_KEYD0,		//Keydet0, GPK16                      Fun ==>53
	//FP_KEYD1
	EN_DRV_GPIO_FP_KEYD1_PINOUT1,		//Keydet1, GPK10  Fun ==>54
	EN_DRV_GPIO_FP_KEYD1_PINOUT2,		//Keydet1, GPK15  Fun ==>55
	EN_DRV_GPIO_FP_KEYD1_PINOUT3,		//Keydet1, GPK17  Fun ==>56
	//FP_KEYD2
	EN_DRV_GPIO_FP_KEYD2_PINOUT1,		//Keydet2, GPK9    Fun ==>57
	EN_DRV_GPIO_FP_KEYD2_PINOUT2,		//Keydet2, GPK14  Fun ==>58
	EN_DRV_GPIO_FP_KEYD2_PINOUT3,		//Keydet2, GPK17  Fun ==>59
	//Dsplycm
	EN_DRV_GPIO_FP_164,					//Dsplyclk, GPK9 DsplyA, GPK10  Fun ==>60
	EN_DRV_GPIO_FP_LED_0,               //Dsplycm0, GPK11                      Fun ==>61
	EN_DRV_GPIO_FP_LED_1,               //Dsplycm1, GPK12                       Fun ==>62
	EN_DRV_GPIO_FP_LED_2,               //Dsplycm2, GPK13                        Fun ==>63
	EN_DRV_GPIO_FP_LED_3,               //Dsplycm3, GPK14                       Fun ==>64
    EN_DRV_GPIO_FP_LED_4,               //Dsplycm4, GPK15                       Fun ==>65

	//CI0_CONTROL_PIN
	EN_DRV_GPIO_CI_CI0,      	//GPJ[0,1,2,10,14] = {CI0_CD,CI0_CE,CI0_INT,CI_IORD,CI0_OE}  Fun ==>66
	
	//CI1_CONTROL_PIN
	EN_DRV_GPIO_CI_CI1,			//GPJ[4,5,6,16,17] = {CI1_CD,CI1_CE,CI1_INT,CI1_IORD,CI1_OE}            Fun ==>67

	//CI_COMMON
	EN_DRV_GPIO_CI_COMMON, //GPJ[8,9,11,12,13,15] = {CI_DIR, CI_EN, CI_IOWR,CI_REG,HWAIT,CI_WR}   Fun ==>68
	                                                     //GPJ[18:25, 26:31] = {HAD0~7, HA0~5}
	                                                     //GPK[0:8] = {HA6~14}

	//PPI 69
	EN_DRV_GPIO_PPI,                                                                                                                                                     //Fun ==>66
	                 //GPF[15,16,17,18,19] = {PPI_A18, A4, A17, A3, A7}
	                 //GPG[0:15, 16] = {PPI_A23, A21, A8, A14, A10, A22, A12, A11, A24, A16, A9, A13, A25, A19, A15, PPI_WE}
	                 //GPH[0,1,2,3,4,5,6,7,8,9,10] = {PPI_D3,A0,D9,D1,D11,D0,D4,D2,D10,D4,OEN,D8}
	                 //GPI[0,1,2,3,4,5,6,7,8,9,10] = {PPI_D12,D13,D7,D14,A6,A2,A20,A5,A1,D6,D5}

//============= Main Chip New Function =====================
    
    //efuse test pin 72
    EN_DRV_GPIO_EFUSE_T, //GPE6

	//STBC test pin 73
	EN_DRV_GPIO_STBC_T,//GPE6

	//PWM_DC2DC 
	//EN_DRV_PWM_FROM_DC2DC,//
    
	//RMII 74,75
	EN_DRV_GPIO_RMII_PINOUT4,//GPH 11,12,13,14,16,18,19,20,21
    EN_DRV_GPIO_RMII_PINOUT5,//GPK 9~17
    //SC0 76
	EN_DRV_GPIO_SC0_PINOUT1,//GPH12:PWR, GPH13:DAT, GPH14:CLK, GPH20:RST, GPH21:CD

	//UART0 77
	EN_DRV_GPIO_UART0_PINOUT3,//GPH15: RX, GPH17:TX

	//HALE ?? 8
	EN_DRV_GPIO_HALE, // GPH2

	//EJTAG 79 80 81
	EN_DRV_GPIO_EJTAG_PINOUT3,	//TCK: GPH0, TDI: GPH2, TDO: GPH3, TMS: GPH9, TRSTn: GPH8
	EN_DRV_GPIO_EJTAG_PINOUT4,	//TCK: GPH10, TDI: GPH2, TDO: GPH3, TMS: GPH9, TRSTn: GPH1
	EN_DRV_GPIO_EJTAG_PINOUT5,	//TCK: GPL17, TDI: GPL18, TDO: GPL3, TMS: GPL5, TRSTn: GPL7

	//CI_common 82~92
	EN_DRV_GPIO_CI_REG_PINOUT1,     //GPH0  81
	EN_DRV_GPIO_CI_REG_PINOUT2,     //GPJ12 82
    EN_DRV_GPIO_CI_WAIT_PINOUT1,   //GPH6   83
    EN_DRV_GPIO_CI_WAIT_PINOUT2,   //GPJ13  84
    EN_DRV_GPIO_CI_WR_PINOUT1,     //GPI2   85
    EN_DRV_GPIO_CI_WR_PINOUT2,     //GPJ15  86
    EN_DRV_GPIO_CI_EN_PINOUT1,     //GPI5   87
    EN_DRV_GPIO_CI_EN_PINOUT2,     //GPJ9   88
    EN_DRV_GPIO_CI_DIR_PINOUT1,   //GPI6    89
    EN_DRV_GPIO_CI_DIR_PINOUT2,   //GPJ8    90
    EN_DRV_GPIO_CI_IOWR,  //GPJ11                91

	//93~113
    EN_DRV_GPIO_CI_HA0_PINOUT1,    //GPH2  92
    EN_DRV_GPIO_CI_HA0_PINOUT2,    //GPJ26  93
    EN_DRV_GPIO_CI_HA1_PINOUT1,    //GPH10  94
    EN_DRV_GPIO_CI_HA1_PINOUT2,    //GPJ27  95
    EN_DRV_GPIO_CI_HA2_PINOUT1,    //GPH5   96
    EN_DRV_GPIO_CI_HA2_PINOUT2,    //GPJ28  97
    EN_DRV_GPIO_CI_HA3_PINOUT1,    //GPH4  98
    EN_DRV_GPIO_CI_HA3_PINOUT2,    //GPJ29 99
    EN_DRV_GPIO_CI_HA4_PINOUT1,    //GPH7 100
    EN_DRV_GPIO_CI_HA4_PINOUT2,    //GPJ30 101
    EN_DRV_GPIO_CI_HA5_PINOUT1,    //GPH8  102
    EN_DRV_GPIO_CI_HA5_PINOUT2,    //GPJ31 103
    EN_DRV_GPIO_CI_HA6_PINOUT1,    //GPI0   104
    EN_DRV_GPIO_CI_HA6_PINOUT2,    //GPK0  105
    EN_DRV_GPIO_CI_HA7_PINOUT1,    //GPI10  106
    EN_DRV_GPIO_CI_HA7_PINOUT2,    //GPK1   107
    EN_DRV_GPIO_CI_HA12_PINOUT1,    //GPI9  108
    EN_DRV_GPIO_CI_HA12_PINOUT2,    //GPK6  109
    EN_DRV_GPIO_CI_HA14_PINOUT1,    //GPI3  110
    EN_DRV_GPIO_CI_HA14_PINOUT2,    //GPK8  111
    EN_DRV_GPIO_CI_HA8_9_10_11_13,  //GPK 2,3,4,5,7  112

	//114~122
	EN_DRV_GPIO_CI_HAD0_PINOUT1,   //GPH3  113
	EN_DRV_GPIO_CI_HAD0_PINOUT2,   //GPJ18 114
	EN_DRV_GPIO_CI_HAD1_PINOUT1,   //GPH9 115
	EN_DRV_GPIO_CI_HAD1_PINOUT2,   //GPJ19 116
	EN_DRV_GPIO_CI_HAD2_PINOUT1,    //GPH1 117
	EN_DRV_GPIO_CI_HAD2_PINOUT2,    //GPJ20 118
    EN_DRV_GPIO_CI_HAD3_PINOUT1,    //GPI8 119
    EN_DRV_GPIO_CI_HAD3_PINOUT2,    //GPJ21 120
    EN_DRV_GPIO_CI_HAD4t07,      //GPJ22,23,24,25 121
    
	//CI0 123~127
	EN_DRV_GPIO_CI0_CD_PINOUT1,    //GPI7  122
	EN_DRV_GPIO_CI0_CD_PINOUT2,    //GPJ0  123
	EN_DRV_GPIO_CI0_INT_PINOUT1,   //GPI1  124
	EN_DRV_GPIO_CI0_INT_PINOUT2,   //GPJ2  125
	EN_DRV_GPIO_CI0_CE_IORD_OE,    //GPJ1,10,14  126

   //CI1 128~137
	EN_DRV_GPIO_CI1_CD_PINOUT1,    //GPI0  127
	EN_DRV_GPIO_CI1_CD_PINOUT2,    //GPJ4  128
	EN_DRV_GPIO_CI1_INT_PINOUT1,   //GPI9  129
	EN_DRV_GPIO_CI1_INT_PINOUT2,   //GPJ6  130
	EN_DRV_GPIO_CI1_OE_PINOUT1,   //GPI2    131
	EN_DRV_GPIO_CI1_OE_PINOUT2,   //GPJ16   132
	EN_DRV_GPIO_CI1_IORD_PINOUT1, //GPI3   133
	EN_DRV_GPIO_CI1_IORD_PINOUT2, //GPJ17  134
	EN_DRV_GPIO_CI1_CE_PINOUT1,   //GPI10  135
	EN_DRV_GPIO_CI1_CE_PINOUT2,   //GPJ5   136
	
	//NF 138~141
	EN_DRV_GPIO_NF_D0toD7_CE0_RE_BSY,//GPI 0~10  137
	EN_DRV_GPIO_NF_D0toD7_BSY,//GPJ 18,19,20,26,27,28,29,30,31 138
	EN_DRV_GPIO_NF_CONTROL,   //GPJ4,5,7,16,17  139
	EN_DRV_GPIO_NF_CE0_RE,    //GPK0,1 140

	//SD 142~164
	EN_DRV_GPIO_SD_CMD_CLK_D0_PINOUT1, //GPI 0,3,10      141
	EN_DRV_GPIO_SD_CMD_CLK_D0_PINOUT2, //GPK 11,15,16  142
	EN_DRV_GPIO_SD_D1t0D3_PINOUT1,   //GPI 1,2,9    143
	EN_DRV_GPIO_SD_D1toD3_PINOUT2,   //GPK 12,13,14  144
	EN_DRV_GPIO_SD_D2,         //GPI 18   145
	EN_DRV_GPIO_SD_D2_D3,      //GPJ 30,31 146
	EN_DRV_GPIO_SD_D0, //GPK1                     147
	EN_DRV_GPIO_SD_D1,         //GPK0      148
	EN_DRV_GPIO_SD_D0_D1_D3,      //GPL2,6,3    149
	EN_DRV_GPIO_SD_CD_PINOUT1, //GPI 6      150
	EN_DRV_GPIO_SD_CD_PINOUT2, //GPI 25    151
	EN_DRV_GPIO_SD_CD_PINOUT3, //GPJ 27    152
	EN_DRV_GPIO_SD_CD_PINOUT4, //GPK 17   153
  EN_DRV_GPIO_SD_WP_PINOUT1, //GPI8          154  
  EN_DRV_GPIO_SD_WP_PINOUT2, //GPJ12        155
  EN_DRV_GPIO_SD_WP_PINOUT3, //GPK10       156
  EN_DRV_GPIO_SD_WP_PINOUT4, //GPL0         157
  EN_DRV_GPIO_SD_MS_PWE_PINOUT1,//GPI 5   158
  EN_DRV_GPIO_SD_MS_PWE_PINOUT2,//GPI 16   159
  EN_DRV_GPIO_SD_MS_PWE_PINOUT3,//GPJ 26   160
  EN_DRV_GPIO_SD_CMD,//GPINOUT                    161
  EN_DRV_GPIO_SD_CLK,//GPI24                       162
  EN_DRV_GPIO_SD_CMD_CLK,    //GPJ28,29      163 
    
   

	//MS
	EN_DRV_GPIO_MS_INS_PINOUT1, //GPI 7   164
	EN_DRV_GPIO_MS_INS_PINOUT2, //GPI 26  165
  EN_DRV_GPIO_MS_INS_PINOUT3, //GPK 6       166
	//PCM??              
	EN_DRV_GPIO_PCM,                    //167    
	//EN_DRV_GPIO_PCM_D0, //GPL0
	//EN_DRV_GPIO_PCM_D1, //GPL5
	//EN_DRV_GPIO_PCM_D2, //GPL4
	//EN_DRV_GPIO_PCM_D3,//GPI 17
	//EN_DRV_GPIO_PCM_ACLK,//GPL18
	//EN_DRV_GPIO_PCM_CLK,//GPL17
	//EN_DRV_GPIO_PCM_WS,//GPL7

	//FUM
	EN_DRV_GPIO_FUM,//GPL 3,7,17,18   //168

	//Switch SPI pin to GPIO
	EN_DRV_GPIO_GPD25,             //169
	EN_DRV_GPIO_GPD26,            //170  
	EN_DRV_GPIO_GPD27,              
	EN_DRV_GPIO_GPD28,
	EN_DRV_GPIO_GPD29,
	EN_DRV_GPIO_GPD30,
	EN_DRV_GPIO_GPD31,

	//Switch EJTAG oins to GPIO  //176
	EN_DRV_GPIO_GPA3,             //169
	EN_DRV_GPIO_GPA4,            //170  
	EN_DRV_GPIO_GPA5,              
	EN_DRV_GPIO_GPA6,
	EN_DRV_GPIO_GPA7,

	
	EN_DRV_GPIO_FUN_NUM

	//Switch EJTAG oins to GPIO
	
	//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
    
}EN_DRV_GPIO_FUN;

#endif

/*!
 * \brief
 * 	GPIO structure of port and bit
 */
typedef struct
{
	EN_DRV_GPIO_PORT	enGPIOPort;		/*!< GPIO's port*/
	EN_DRV_GPIO_BIT		enGPIOBit;		/*!< GPIO's bit	*/
}ST_GPIO, *PST_GPIO;

/*!
 * \brief
 *  the device initial sructure
 */
typedef struct 
{
	os_mempool_handle	u32MemPoolHandle;			/*!< A memory pool handle for GPIO module	*/
	u32					au32GPIOUnusedPin[EN_DRV_GPIO_PORT_ALL]; 
	u32					au32GPIOUnusedPinHL[EN_DRV_GPIO_PORT_ALL]; 
}ST_GPIO_Init,*PST_GPIO_Init;

/**
 * \brief
 *  Structure of GPIO open
 */
typedef struct 
{
	u32								au32GPIOMask[EN_DRV_GPIO_PORT_ALL];
}ST_GPIO_Open, *PST_GPIO_Open;

/**
 * \brief
 *  Structure of GPIO config
 */
typedef struct 
{
	ST_GPIO								stGPIO;						/*!< Interrupt GPIO Port											*/
	EN_DRV_GPIO_INTR_TRIGGER_CONDITION	enINTRTrigCodition;			/*!< Interrupt GPIO trigger condition								*/
	u32									u32EVTHandle;				/*!< EVENT Handle */
}ST_GPIO_Config, *PST_GPIO_Config;
 
 		

#ifdef GPIO_POLLING
typedef struct 
{
	u32		u32EventHandle;		
	u32		u32GPIOHandle;
	ST_GPIO stGPIO;
}ST_GPIO_EVENT, *PST_GPIO_EVENT;
#endif
//function define
ErrorCode DRV_GPIO_GetVersion (u8 *pu8VersionNum);
/*!\fn ErrorCode DRV_GPIO_GetVersion (u8 *pu8VersionNum)
 * \brief 
 *		Get the GPIO's Version number string	   
 *
 * \param pu8VersionNum	(Output) Version number string
 * 
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR				Operation Success	  
 * \retval ERROR_BAD_PARAMETER			Parameter error
 * 
 */
 
ErrorCode DRV_GPIO_Initialize (PST_GPIO_Init pstInit);
/*!\fn ErrorCode DRV_GPIO_Initialize (PST_GPIO_Init pstInit)
 * \brief 
 *		Initial the GPIO device with DRV_GPIO_Init setting	
 *
 * \param pstInit		(Input) GPIO device init parameter
 * 
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation Success	
 * \retval ERROR_BAD_PARAMETER				Parameter error 
 * \retval EN_DRV_GPIO_ERR_HAVEINIT			This GPIO have initialled
 * 
 */

ErrorCode DRV_GPIO_Terminate (bool b8Force);
/*!\fn ErrorCode DRV_GPIO_Terminate (bool b8Force)
 * \brief 
 *		Terminate the use of the GPIO device	
 *
 * \param bForce		(Input) Force termiante the device or not
 * \code
	True , Terminate the GPIO right now
	False, wait until all open handles close then terminate
   \endcode
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR			Operation Success
 * \retval ERROR_BAD_PARAMETER	Parameter error
 * \retval EN_DRV_GPIO_ERR_DEVICE		No such device
 *
 */

ErrorCode DRV_GPIO_Open (PST_GPIO_Open pstOpen, u32 *pu32Handle);
/*!\fn ErrorCode DRV_GPIO_Open (DRV_DeviceNameType DeviceName, PST_GPIO_Open pstOpen, u32 *pu32Handle)
 * \brief 
 *        Open the GPIO device and associate it with a handle    
 *
 * \param pstOpen			(Input) GPIO config parameter
 * \param pu32Handle		(Output) Handle number the open of the GPIO device
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation Success
 * \retval ERROR_BAD_PARAMETER				Parameter error 
 * \retval EN_DRV_GPIO_ERR_DEVICE			No such device
 *
 */

ErrorCode DRV_GPIO_Close (u32* pu32Handle);
/*!\fn ErrorCode DRV_GPIO_Close (u32* pu32Handle)
 * \brief 
 *        Close GPIO device associated with a handle     
 *
 * \param pu32Handle			(Input) Pointer to the opening handle number of the GPIO device
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation Success
 * \retval ERROR_INVALID_HANDLE				Handle value is not accept
 * \retval EN_DRV_GPIO_ERR_COLLISION		The GPIO pin have register
 *
 */

ErrorCode DRV_GPIO_GetConfig (u32 u32Handle, PST_GPIO_Config pstPara);
/*!\fn ErrorCode DRV_GPIO_GetConfig (u32 u32Handle, PST_GPIO_Config pstPara)
 * \brief
 * 		Get the GPIO's config data    
 *
 * \param u32Handle		(Input) An open handle, as returned by the Open function
 * \param pstPara		(Output) GPIO config parameter
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_SetConfig (u32 u32Handle, PST_GPIO_Config pstPara);
/*!\fn ErrorCode DRV_GPIO_SetConfig (u32 u32Handle, PST_GPIO_Config pstPara)
 * \brief
 * 		Set the GPIO device's config data    
 * 
 * \param u32Handle		(Input) An open handle, as returned by the Open function
 * \param pstPara		(Input) GPIO config parameter
 * 
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_BitSetDirection (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_DIR enGPIODir);
/*!\fn ErrorCode DRV_GPIO_BitSetDirection (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_DIR enGPIODir)
 * \brief
 * 		Set direction of the GPIO pin.
 * 
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param stGPIO			(Input) Structure of GPIO port and bit
 * \param enGPIODir			(Input) GPIO's direction
 * 
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_BitWrite (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_STATUS enValue);
/*!\fn ErrorCode DRV_GPIO_BitWrite (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_STATUS enValue)
 * \brief 
 * 		Write status of the GPIO.
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param stGPIO			(Input) Structure of GPIO port and bit
 * \param enValue			(Input) GPIO's value, logic high or logic low
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */
ErrorCode DRV_GPIO_BitRead (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_STATUS *penValue);
/*!\fn ErrorCode DRV_GPIO_BitRead (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_STATUS *penValue);
 * \brief 
 * 		Read GPIO status.
 *
 * \param u32Handle		(Input) An open handle, as returned by the Open function
 * \param stGPIO		(Input) which GPIO port and bit
 * \param penValue		(Output) GPIO's value, logic high or logic low
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_PortWrite (u32 u32Handle, EN_DRV_GPIO_PORT enGPIOPort, u32 u32GPIOSetMask, EN_DRV_GPIO_STATUS enValue);
/*!\fn ErrorCode DRV_GPIO_PortWrite (u32 u32Handle, EN_DRV_GPIO_PORT enGPIOPort, u32 u32GPIOSetMask, EN_DRV_GPIO_STATUS enValue)
 * \brief 
 * 		Write Multi GPIO status.
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param enGPIOPort		(Input) target GPIO port
 * \param u32GPIOSetMask	(Input) Mask of what GPIO want to set
 * \param enValue			(Input) GPIO's value, logic high or logic low
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_PortSetDir (u32 u32Handle, EN_DRV_GPIO_PORT enGPIOPort, u32 u32GPIOSetMask, EN_DRV_GPIO_DIR enGPIODir);
/*!\fn ErrorCode DRV_GPIO_PortSetDir (u32 u32Handle, EN_DRV_GPIO_PORT enGPIOPort, u32 u32GPIOSetMask, EN_DRV_GPIO_DIR enGPIODir)
 * \brief 
 * 		Set Multi GPIO direction.
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param enGPIOPort		(Input) which GPIO port
 * \param u32GPIOSetMask	(Input) Mask of what GPIO want to set
 * \param enGPIODir			(Input) GPIO's direction
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is successBIT_06
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_INTR_GetStatus (u32 u32Handle, u32 *u32INTRStatus);
/*!\fn ErrorCode DRV_GPIO_INTR_GetStatus (u32 u32Handle, u32 *u32INTRStatus)
 * \brief 
 * 		Get GPIO interrupt status
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param u32INTRStatus		(Output) INTR status
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_INTR_ClearStatus (u32 u32Handle);
/*!\fn ErrorCode DRV_GPIO_INTR_ClearStatus (u32 u32Handle)
 * \brief 
 * 		Clear GPIO interrupt status
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_Lock (u32 u32Handle, bool b8Lock);
/*!\fn ErrorCode DRV_GPIO_Lock (u32 u32Handle, bool b8Lock)
 * \brief 
 *		Set the GPIO device to protection mode.\n	   
 *		No other handle can read the GPIO device unless unlock
 *
 * \param u32Handle			(Input) An open handle, as returned by the Open function
 * \param bLock				(Input) Lock the GPIO device or not
   \code
	True, Lock the GPIO
	False, Unlock the GPIO
   \endcode	
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation Success
 * \retval ERROR_BAD_PARAMETER				Parameter error 
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_SetPFCR(EN_DRV_GPIO_FUN enGPIOFunc, bool b8Enable);
/*!\fn ErrorCode DRV_GPIO_PFCR(EN_DRV_GPIO_FUN	enGPIOFunc, bool b8Enable)
 * \brief 
 * 		SET pin function control (PFCR)
 *
 * \param enGPIOFunc		(Input) enGPIOFunc
 * \param b8Enable			(Output) Setting mode
   \code
	True, Set pin to Function
	False, Set pin to GPIO or TurnOff function.
   \endcode	
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_BitSetPULL (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_PULL_STATUS enPullStatus);
/*!\fn ErrorCode DRV_GPIO_BitSetPULL (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_STATUS enPullStatus);
 * \brief 
 * 		Read GPIO status.
 *
 * \param u32Handle		(Input) An open handle, as returned by the Open function
 * \param stGPIO		(Input) which GPIO port and bit
 * \param enPullStatus	(Input) GPIO's PULL status
 *
 * \return GPIO Operation Error Code
 * \retval ERROR_NO_ERROR					Operation is success
 * \retval ERROR_BAD_PARAMETER				Parameter is error
 * \retval ERROR_INVALID_HANDLE				Handle value is not accepted
 *
 */

ErrorCode DRV_GPIO_BitGetPULL (u32 u32Handle, ST_GPIO stGPIO, EN_DRV_GPIO_PULL_STATUS *penPullStatus);

ErrorCode _drv_gpio_irq(EN_DRV_GPIO_INTERRUPT_NUM enGpioIntNum);

u32 DRV_GPIO_GetGPAMux(void);

void DRV_GPIO_SetGPAMux(u32 u32Value);
#ifdef GPIO_POLLING
ErrorCode DRV_GPIO_RegEvent (PST_GPIO_EVENT pstEvtReg);
#endif

#ifdef  SEN5_SUPPORT_IR_LED_FUNCTION
void  _Open_GRBIT(EN_DRV_GPIO_PORT enGrop,EN_DRV_GPIO_BIT enGropBit);
void  _Write_GRBIT(EN_DRV_GPIO_STATUS enValue);
#endif

#endif //#ifndef __DRV_GPIO_H__
